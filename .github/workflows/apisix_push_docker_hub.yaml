name: Push apisix to Docker image
on:
  push:
    branches: ['release/apisix-**']
  workflow_dispatch:


jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        platform:
          - debian
          - redhat
    env:
      APISIX_DOCKER_TAG: 3.11.0-${{ matrix.platform }}

    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - uses: actions/download-artifact@v4
        with:
          github-token: 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
          path: /tmp
      - name: Build and run
        run: |
          cd docker
          make build-on-${{ matrix.platform }}
          wget https://raw.githubusercontent.com/apache/apisix-docker/master/compose/docker-compose-release.yaml
          docker compose -f ./docker-compose-release.yaml up -d
          sleep 30
          docker logs compose-apisix-1

      - name: Test route
        run: |

          curl http://127.0.0.1:9180/apisix/admin/routes/1 \
          -H 'X-API-KEY: edd1c9f034335f136f87ad84b625c8f1' -X PUT -d '
            {
            "uri": "/get",
            "upstream": {
                "type": "roundrobin",
                "nodes": {
                    "httpbin.org:80": 1
                }
            }
          }'

          result_code=`curl -I -m 10 -o /dev/null -s -w %{http_code} http://127.0.0.1:9080/get`
          if [[ $result_code -ne 200 ]];then
            printf "result_code: %s\n" "$result_code"
            exit 125
          fi
